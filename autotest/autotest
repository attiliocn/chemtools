#!/usr/bin/env python3

import sys
import os
import re
from datetime import datetime
from shutil import copy2, rmtree
import argparse
from natsort import natsorted

argparser = argparse.ArgumentParser()
argparser.add_argument('tbp_files', help = 'TBP intermediate .xyz file', nargs='+')
argparser.add_argument('--cross', help='Require the cycloaddition metathesis TS', action='store_true')
args = argparser.parse_args()

MASTER_DIR = os.getcwd()
AUTOTEST_DIR = os.path.dirname(os.path.realpath(sys.argv[0]))
CONFIG_DIR = os.path.join(AUTOTEST_DIR,'config')
SCRIPTS_DIR = os.path.join(AUTOTEST_DIR, 'scripts')

def get_tbp_type(filename):
    tbp_type = re.search('tbp-[0-9]{1}', filename).group()
    tbp_type_number = int(tbp_type.replace('tbp-', ''))
    return tbp_type_number

def get_pictr_input(filename, cross=args.cross, config_dir=CONFIG_DIR):
    group_1 = [1,2]
    is_group_1 = False
    tbp_type_number = get_tbp_type(filename)

    if tbp_type_number in group_1 and cross == False:
        is_group_1 = True
    elif tbp_type_number not in group_1 and cross == True:
        is_group_1 = True

    if is_group_1 == True:
        input_file = os.path.join(config_dir, 'input_pi-ctr_mcb-type-1-or-2')
    elif is_group_1 == False:
        input_file = os.path.join(config_dir, 'input_pi-ctr_mcb-type-3-or-4')
    
    return input_file

starting_time = datetime.now()
tbp_files = natsorted(args.tbp_files)
log_file = open('log.txt', mode='w', buffering=1)

log_file.write('Processing the following files:\n')
log_file.write('\n'.join(tbp_files)+'\n\n')

for tbp_file in tbp_files:
    log_file.write(f'Processing:\t{tbp_file}\n')

    tbp_type_number = get_tbp_type(tbp_file)
    tbp_file_bn = tbp_file.split('.',1)[0]

    log_file.write(f'This TBP is of type:\t{tbp_type_number}\n')

    try: 
        os.mkdir(tbp_file_bn)
    except FileExistsError:
        rmtree(tbp_file_bn)
        os.mkdir(tbp_file_bn)

    copy2(tbp_file, f"{tbp_file_bn}/")

    os.chdir(tbp_file_bn)

    log_file.write('Running PI_CTR_OPTIMIZATION\n')
    os.mkdir('1_generate-pictr')
    copy2(tbp_file, '1_generate-pictr/')
    os.chdir('1_generate-pictr')
    pictr_input = get_pictr_input(tbp_file)
    pictr_file = tbp_file.replace('tbp', 'pictr')
    os.system(f"xtb {tbp_file} -v --gfn 1 --chrg 0 --uhf 0 --opt --input {pictr_input} > xtb.output 2> /dev/null")
    copy2('xtbopt.xyz', pictr_file)
    os.chdir('..')

    log_file.write('Running RMSDPP\n')
    os.mkdir('2_rmsdpp')
    copy2(tbp_file, '2_rmsdpp/')
    copy2(f'1_generate-pictr/{pictr_file}', '2_rmsdpp/')
    os.chdir('2_rmsdpp')
    rmsdpp_input = os.path.join(CONFIG_DIR, 'rmsdpp')
    ts_file = tbp_file.replace('tbp', 'ts')
    os.system(f"xtb {tbp_file} --path {pictr_file} -v --gfn 1 --chrg 0 --uhf 0 --input {rmsdpp_input} > xtb.output 2> /dev/null")

    if os.path.isfile('xtbpath_ts.xyz'):
        copy2('xtbpath_ts.xyz', ts_file)
    
    os.chdir('..')

    os.chdir(MASTER_DIR)
    log_file.write('\n')

final_time = datetime.now()
elapsed_time = final_time - starting_time
log_file.write(f'Elapsed time: {elapsed_time}\n')
log_file.close()